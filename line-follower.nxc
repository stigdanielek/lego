#define SENSOR IN_3
#define LEFT_MOTOR OUT_B
#define RIGHT_MOTOR OUT_C
#define DARK_LEVEL 800
#define LIGHT_LEVEL 1700
#define THRESHOLD (DARK_LEVEL + LIGHT_LEVEL) / 2
#define SPEED 20

float getSensorValue() {
  float sensorVal;
  ColorSensorReadType csr;
  csr.Port = SENSOR;
  SysColorSensorRead(csr);
  if (csr.Result == NO_ERR) {
    sensorVal = csr.RawArray[0] + csr.RawArray[1] + csr.RawArray[2];
  }
  return sensorVal;
}

float limitValue(float value) {
  if (value > 100) return 100;
  else if (value < -100) return -100;
  return value;
}

sub printInfo(float sensorValue, float error, float left, float right) {
  TextOut(0, LCD_LINE1, "Line follower");
  TextOut(0, LCD_LINE2, FormatNum("sensor: %6.2f", sensorValue));
  TextOut(0, LCD_LINE3, FormatNum("error:  %6.2f", error));
  TextOut(0, LCD_LINE4, FormatNum("left:   %6.2f", left));
  TextOut(0, LCD_LINE5, FormatNum("right:  %6.2f", right));
}

task main() {
  SetSensorColorFull(SENSOR);

  float sensorValue;
  float error;
  float turn;
  float left;
  float right;

  while (true) {
    sensorValue = getSensorValue();
    error = sensorValue - THRESHOLD;

    turn = 0.1 * error;
    left = SPEED - turn;
    right = SPEED + turn;

    left = limitValue(left);
    right = limitValue(right);

    printInfo(sensorValue, error, left, right);

    OnFwd(LEFT_MOTOR, left);
    OnFwd(RIGHT_MOTOR, right);
  }
}
